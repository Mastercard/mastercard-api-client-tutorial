/*
 * MDES Digital Enablement API
 *
 * These APIs are designed as RPC style stateless web services where each API endpoint represents an operation to be performed.  All request and response payloads are sent in the JSON (JavaScript Object Notation) data-interchange format. Each endpoint in the API specifies the HTTP Method used to access it. All strings in request and response objects are to be UTF-8 encoded.  Each API URI includes the major and minor version of API that it conforms to.  This will allow multiple concurrent versions of the API to be deployed simultaneously. <br><br> **Authentication** <br><br> Mastercard uses OAuth 1.0a with body hash extension for authenticating the API clients. This requires every request that you send to  Mastercard to be signed with an RSA private key. A private-public RSA key pair must be generated consisting of: <br><br> 1. A private key for the OAuth signature for API requests. It is recommended to keep the private key in a password-protected or hardware keystore. <br> 2. A public key is shared with Mastercard during the project setup process through either a certificate signing request (CSR) or the API Key Generator. Mastercard will use the public key to verify the OAuth signature that is provided on every API call.<br>  An OAUTH1.0a signer library is available on [GitHub](https://github.com/Mastercard/oauth1-signer-java) <br><br> **Encryption** <br><br> All communications between Issuer web service and the Mastercard gateway is encrypted using TLS. <br><br> **Additional Encryption of Sensitive Data** <br><br> In addition to the OAuth authentication, when using MDES Digital Enablement Service, any PCI sensitive and all account holder Personally Identifiable Information (PII) data must be encrypted. This requirement applies to the API fields containing encryptedData. Sensitive data is encrypted using a symmetric session (one-time-use) key. The symmetric session key is then wrapped with an RSA Public Key supplied by Mastercard during API setup phase (the Customer Encryption Key). <br>  Java Client Encryption Library available on [GitHub](https://github.com/Mastercard/client-encryption-java) 
 *
 * The version of the OpenAPI document: 1.3.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Acme.App.MastercardApi.Client.Client.OpenAPIDateConverter;

namespace Acme.App.MastercardApi.Client.Model
{
    /// <summary>
    /// TokenInfo
    /// </summary>
    [DataContract(Name = "tokenInfo")]
    public partial class TokenInfo : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TokenInfo" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected TokenInfo() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="TokenInfo" /> class.
        /// </summary>
        /// <param name="tokenPanSuffix">The last few digits (typically four) of the Token PAN.  (required).</param>
        /// <param name="accountPanSuffix">The last few digits (typically four) of the Account PAN.  (required).</param>
        /// <param name="tokenExpiry">The expiry of the Token PAN, given in MMYY format.  (required).</param>
        /// <param name="accountPanExpiry">The expiry of the Account PAN, given in MMYY format. .</param>
        /// <param name="dsrpCapable">Whether DSRP transactions are supported by this Token. Must be either &#39;true&#39; (DSRP capable) or &#39;false&#39; (Not DSRP capable).  (required).</param>
        /// <param name="tokenAssuranceLevel">A value indicating the confidence level of the token to Account PAN binding. .</param>
        /// <param name="productCategory">The product category of the Account PAN. When supplied will be one of the following values:    * CREDIT   * DEBIT   * PREPAID   * UNKNOWN .</param>
        public TokenInfo(string tokenPanSuffix = default(string), string accountPanSuffix = default(string), string tokenExpiry = default(string), string accountPanExpiry = default(string), bool dsrpCapable = default(bool), int tokenAssuranceLevel = default(int), string productCategory = default(string))
        {
            // to ensure "tokenPanSuffix" is required (not null)
            if (tokenPanSuffix == null)
            {
                throw new ArgumentNullException("tokenPanSuffix is a required property for TokenInfo and cannot be null");
            }
            this.TokenPanSuffix = tokenPanSuffix;
            // to ensure "accountPanSuffix" is required (not null)
            if (accountPanSuffix == null)
            {
                throw new ArgumentNullException("accountPanSuffix is a required property for TokenInfo and cannot be null");
            }
            this.AccountPanSuffix = accountPanSuffix;
            // to ensure "tokenExpiry" is required (not null)
            if (tokenExpiry == null)
            {
                throw new ArgumentNullException("tokenExpiry is a required property for TokenInfo and cannot be null");
            }
            this.TokenExpiry = tokenExpiry;
            this.DsrpCapable = dsrpCapable;
            this.AccountPanExpiry = accountPanExpiry;
            this.TokenAssuranceLevel = tokenAssuranceLevel;
            this.ProductCategory = productCategory;
        }

        /// <summary>
        /// The last few digits (typically four) of the Token PAN. 
        /// </summary>
        /// <value>The last few digits (typically four) of the Token PAN. </value>
        /// <example>0001</example>
        [DataMember(Name = "tokenPanSuffix", IsRequired = true, EmitDefaultValue = true)]
        public string TokenPanSuffix { get; set; }

        /// <summary>
        /// The last few digits (typically four) of the Account PAN. 
        /// </summary>
        /// <value>The last few digits (typically four) of the Account PAN. </value>
        /// <example>0011</example>
        [DataMember(Name = "accountPanSuffix", IsRequired = true, EmitDefaultValue = true)]
        public string AccountPanSuffix { get; set; }

        /// <summary>
        /// The expiry of the Token PAN, given in MMYY format. 
        /// </summary>
        /// <value>The expiry of the Token PAN, given in MMYY format. </value>
        /// <example>921</example>
        [DataMember(Name = "tokenExpiry", IsRequired = true, EmitDefaultValue = true)]
        public string TokenExpiry { get; set; }

        /// <summary>
        /// The expiry of the Account PAN, given in MMYY format. 
        /// </summary>
        /// <value>The expiry of the Account PAN, given in MMYY format. </value>
        /// <example>921</example>
        [DataMember(Name = "accountPanExpiry", EmitDefaultValue = false)]
        public string AccountPanExpiry { get; set; }

        /// <summary>
        /// Whether DSRP transactions are supported by this Token. Must be either &#39;true&#39; (DSRP capable) or &#39;false&#39; (Not DSRP capable). 
        /// </summary>
        /// <value>Whether DSRP transactions are supported by this Token. Must be either &#39;true&#39; (DSRP capable) or &#39;false&#39; (Not DSRP capable). </value>
        /// <example>true</example>
        [DataMember(Name = "dsrpCapable", IsRequired = true, EmitDefaultValue = true)]
        public bool DsrpCapable { get; set; }

        /// <summary>
        /// A value indicating the confidence level of the token to Account PAN binding. 
        /// </summary>
        /// <value>A value indicating the confidence level of the token to Account PAN binding. </value>
        /// <example>3</example>
        [DataMember(Name = "tokenAssuranceLevel", EmitDefaultValue = false)]
        public int TokenAssuranceLevel { get; set; }

        /// <summary>
        /// The product category of the Account PAN. When supplied will be one of the following values:    * CREDIT   * DEBIT   * PREPAID   * UNKNOWN 
        /// </summary>
        /// <value>The product category of the Account PAN. When supplied will be one of the following values:    * CREDIT   * DEBIT   * PREPAID   * UNKNOWN </value>
        /// <example>CREDIT</example>
        [DataMember(Name = "productCategory", EmitDefaultValue = false)]
        public string ProductCategory { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TokenInfo {\n");
            sb.Append("  TokenPanSuffix: ").Append(TokenPanSuffix).Append("\n");
            sb.Append("  AccountPanSuffix: ").Append(AccountPanSuffix).Append("\n");
            sb.Append("  TokenExpiry: ").Append(TokenExpiry).Append("\n");
            sb.Append("  AccountPanExpiry: ").Append(AccountPanExpiry).Append("\n");
            sb.Append("  DsrpCapable: ").Append(DsrpCapable).Append("\n");
            sb.Append("  TokenAssuranceLevel: ").Append(TokenAssuranceLevel).Append("\n");
            sb.Append("  ProductCategory: ").Append(ProductCategory).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // TokenPanSuffix (string) maxLength
            if (this.TokenPanSuffix != null && this.TokenPanSuffix.Length > 8)
            {
                yield return new ValidationResult("Invalid value for TokenPanSuffix, length must be less than 8.", new [] { "TokenPanSuffix" });
            }

            // AccountPanSuffix (string) maxLength
            if (this.AccountPanSuffix != null && this.AccountPanSuffix.Length > 8)
            {
                yield return new ValidationResult("Invalid value for AccountPanSuffix, length must be less than 8.", new [] { "AccountPanSuffix" });
            }

            // TokenExpiry (string) maxLength
            if (this.TokenExpiry != null && this.TokenExpiry.Length > 4)
            {
                yield return new ValidationResult("Invalid value for TokenExpiry, length must be less than 4.", new [] { "TokenExpiry" });
            }

            // AccountPanExpiry (string) maxLength
            if (this.AccountPanExpiry != null && this.AccountPanExpiry.Length > 4)
            {
                yield return new ValidationResult("Invalid value for AccountPanExpiry, length must be less than 4.", new [] { "AccountPanExpiry" });
            }

            // ProductCategory (string) maxLength
            if (this.ProductCategory != null && this.ProductCategory.Length > 32)
            {
                yield return new ValidationResult("Invalid value for ProductCategory, length must be less than 32.", new [] { "ProductCategory" });
            }

            yield break;
        }
    }

}
